<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>php on F0rmat&#39;s Blog</title>
    <link>https://xxe.icu/tags/php.html</link>
    <description>Recent content in php on F0rmat&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 27 Sep 2019 01:01:30 +0000</lastBuildDate><atom:link href="https://xxe.icu/tags/php/atom.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Seacms&lt;=9.92前台Getshell</title>
      <link>https://xxe.icu/seacms-front-desk-getshell.html</link>
      <pubDate>Fri, 27 Sep 2019 01:01:30 +0000</pubDate>
      
      <guid>https://xxe.icu/seacms-front-desk-getshell.html</guid>
      <description>0x01 前言 好久没发代码审计的文章了，最近挺多事情的，无意中看到90Sec上面有一篇seacms前台的getshell，突然就很感兴趣，之前审计这</description>
    </item>
    
    <item>
      <title>某云分发APP上传漏洞</title>
      <link>https://xxe.icu/an-app-distribution-system-upload-vulnerability.html</link>
      <pubDate>Fri, 06 Sep 2019 10:47:03 +0000</pubDate>
      
      <guid>https://xxe.icu/an-app-distribution-system-upload-vulnerability.html</guid>
      <description>0x01 前言 大概有几个月没写文章了，最近都在忙(咸鱼),在某此渗透行动中发现的一个洞，感觉是开发留的一个后门。 0x02 漏洞复现 Payload： POST /source/pack/upload/index-uplog.php HTTP/1.1 Host: 127.0.0.1</description>
    </item>
    
    <item>
      <title>浅析PHP反序列化漏洞</title>
      <link>https://xxe.icu/analysis-of-php-deserialization-vulnerabilities.html</link>
      <pubDate>Wed, 05 Jun 2019 17:00:57 +0000</pubDate>
      
      <guid>https://xxe.icu/analysis-of-php-deserialization-vulnerabilities.html</guid>
      <description>0x01 前言 很久没有些文章了，今天复习了反序列化漏洞的知识，顺便写了一篇文章。 0x02 PHP序列化和反序列化基础 我们想要将数组值存储到数据库时，就可以对</description>
    </item>
    
    <item>
      <title>zzzphp1.61 代码审计-从SQL注入到Getshell</title>
      <link>https://xxe.icu/zzzphp1.61-code-auditing-from-injecting-to-taking-a-shell.html</link>
      <pubDate>Sun, 10 Mar 2019 17:56:36 +0000</pubDate>
      
      <guid>https://xxe.icu/zzzphp1.61-code-auditing-from-injecting-to-taking-a-shell.html</guid>
      <description>0x01 前言 前天看到zzzphp这一个cms，看着有点像zzzcms，去看了也是zzzcms开发的一套程序，于是就去审计一下，这zzzcms我之前</description>
    </item>
    
    <item>
      <title>Seacms 8.7版本SQL注入分析</title>
      <link>https://xxe.icu/seacms8.7-sql-injection-analysis.html</link>
      <pubDate>Mon, 04 Mar 2019 15:49:11 +0000</pubDate>
      
      <guid>https://xxe.icu/seacms8.7-sql-injection-analysis.html</guid>
      <description>0x01 前言 好像没发文章了，在t00ls看到一篇seacms8.7的分析文，不过不是最新的版本，好久没看到seacms和maccms这两个cms发</description>
    </item>
    
    <item>
      <title>CVE-2018-1000094-CMSMS 2.2.5代码执行漏洞(每周一洞)</title>
      <link>https://xxe.icu/cve-2018-1000094-cmsms-2.2.5-code-execution-vulnerability.html</link>
      <pubDate>Sat, 11 Aug 2018 09:31:30 +0000</pubDate>
      
      <guid>https://xxe.icu/cve-2018-1000094-cmsms-2.2.5-code-execution-vulnerability.html</guid>
      <description>0x01 前言 CMS Made Simple是一个简单易于使用的内容管理系统。它使用PHP，MySQL和Smarty模板引擎开发。 昨天看漏洞库的时候看到这一款CM</description>
    </item>
    
    <item>
      <title>phpok4.9后台getshell(每周一洞)</title>
      <link>https://xxe.icu/phpok4.9-background-getshell.html</link>
      <pubDate>Mon, 06 Aug 2018 08:19:40 +0000</pubDate>
      
      <guid>https://xxe.icu/phpok4.9-background-getshell.html</guid>
      <description>0x01 前言 昨天看到phpok可以申请cve就去审计了一下，存在漏洞的地方还是挺多的，时间不多找了个简单的任意文件上传漏洞。 0x02 环境 程序下载：htt</description>
    </item>
    
    <item>
      <title>phpok 4.9代码审计(每周一洞)</title>
      <link>https://xxe.icu/phpok-4.9-code-audit.html</link>
      <pubDate>Sun, 05 Aug 2018 14:54:07 +0000</pubDate>
      
      <guid>https://xxe.icu/phpok-4.9-code-audit.html</guid>
      <description>0x01 前言 一放暑假就特别多事情，很多事情都耽误了，看吐司文章看到一篇不错的审计文章，就学习下。 0x02 环境搭建 环境没什么要求PHPstudy就能搞定，</description>
    </item>
    
    <item>
      <title>osCommerce 2.3.4.1 - 远程代码执行漏洞（每日一洞）</title>
      <link>https://xxe.icu/oscommerce-2.3.4.1-remote-code-execution-vulnerability.html</link>
      <pubDate>Mon, 02 Apr 2018 11:18:58 +0000</pubDate>
      
      <guid>https://xxe.icu/oscommerce-2.3.4.1-remote-code-execution-vulnerability.html</guid>
      <description>0x01 前言 好几天没有写了，前两天又去Boom了，差点没缓过来。今天在exploit-db逛看到一个洞，也是install的地方，想去利用上次那个</description>
    </item>
    
    <item>
      <title>DedeCMS V5.7 SP2后台Getshell 代码执行漏洞(每日一洞)</title>
      <link>https://xxe.icu/dedecms-v5.7-sp2-background-getshell-code-execution-vulnerability.html</link>
      <pubDate>Sat, 10 Mar 2018 00:11:57 +0000</pubDate>
      
      <guid>https://xxe.icu/dedecms-v5.7-sp2-background-getshell-code-execution-vulnerability.html</guid>
      <description>前言 这两天费劲脑力去撩小姐姐，感觉好难啊，还不如审计代码。 环境 Web： phpstudy System： Windows 10 X64 Browser： Firefox Quantum Python version ： 2.7 Tools： PhpStorm 2017.1.1 复现</description>
    </item>
    
    <item>
      <title>MetInfo5.3.19安装过程过滤不严导致Getshell(每日一洞)</title>
      <link>https://xxe.icu/metinfo5.3.19-installation-process-is-not-strict-lead-to-getshell.html</link>
      <pubDate>Tue, 06 Mar 2018 22:41:35 +0000</pubDate>
      
      <guid>https://xxe.icu/metinfo5.3.19-installation-process-is-not-strict-lead-to-getshell.html</guid>
      <description>前言 前几天在先知看到的漏洞，就很想写个分析过程了的，因为比赛培训和在审计一个CMS拖到了今天。 环境 Web： phpstudy System： Windows 7 X64 Browse</description>
    </item>
    
    <item>
      <title>ZZCMS8.2任意文件删除至getshell(每日一洞)</title>
      <link>https://xxe.icu/zzcms8.2-any-file-deleted-to-getshell.html</link>
      <pubDate>Tue, 06 Mar 2018 22:41:35 +0000</pubDate>
      
      <guid>https://xxe.icu/zzcms8.2-any-file-deleted-to-getshell.html</guid>
      <description>前言 今天就审计一个洞，时间不够用了。明天或者周末看看有空有拿一些难的漏洞来审计复现一下。 环境 Web： Apache+PHP+MySql System： Ubuntu Browser： Firefox Quantum 漏</description>
    </item>
    
    <item>
      <title>ZZCMS8.2任意用户密码修改漏洞代码分析(每日一洞)</title>
      <link>https://xxe.icu/zzcms-any-user-password-changes-loopholes-code-points.html</link>
      <pubDate>Tue, 06 Mar 2018 00:03:07 +0000</pubDate>
      
      <guid>https://xxe.icu/zzcms-any-user-password-changes-loopholes-code-points.html</guid>
      <description>前言 这几天感冒很难受，再加上比赛的培训，估计后面会两天一篇。 这个小型CMS前段时间我也挖到了很多洞，这次就找seebug发的一篇来做审计。 环</description>
    </item>
    
    <item>
      <title>SeaCMS v6.54和v6.55前台Getshell 代码执行漏洞(每日一洞)</title>
      <link>https://xxe.icu/seacms-v6.54-and-v6.55-front-desk-getshell-code-execution-vulnerability-one-hole-a-day.html</link>
      <pubDate>Sat, 03 Mar 2018 23:32:41 +0000</pubDate>
      
      <guid>https://xxe.icu/seacms-v6.54-and-v6.55-front-desk-getshell-code-execution-vulnerability-one-hole-a-day.html</guid>
      <description>前言 这两个版本修复上次的v6.45版本中的order传值后执行的漏洞，但是在新的版本里面利用parseIf函数的功能还可以继续利用。 因为上一</description>
    </item>
    
    <item>
      <title>SeaCMS v6.45前台Getshell 代码执行漏洞(每日一洞)</title>
      <link>https://xxe.icu/seacms-v6.45-front-desk-getshell-code-execution-vulnerability-one-hole-a-day.html</link>
      <pubDate>Fri, 02 Mar 2018 19:28:36 +0000</pubDate>
      
      <guid>https://xxe.icu/seacms-v6.45-front-desk-getshell-code-execution-vulnerability-one-hole-a-day.html</guid>
      <description>前言 昨晚审计到了三点，今天还要整理宿舍就没有写文章。这个CMS没有用框架，漏洞的执行过程我看了很久才看完，下面就写漏洞执行过程和POC构造还</description>
    </item>
    
    <item>
      <title>通杀FineCMS5.0.8及版本以下getshell的漏洞(每天一洞)</title>
      <link>https://xxe.icu/kill-the-vulnerabilities-of-getshell-v.-finecms-5.0.8-and-below-1-hole-per-day.html</link>
      <pubDate>Wed, 28 Feb 2018 22:23:23 +0000</pubDate>
      
      <guid>https://xxe.icu/kill-the-vulnerabilities-of-getshell-v.-finecms-5.0.8-and-below-1-hole-per-day.html</guid>
      <description>前言 这几天都挺忙的，刚开学也在做比赛的培训，每天一洞这个事情一定得坚持下去，跟着上次的finecms，在漏洞时代又找了一个漏洞来审计。但是他</description>
    </item>
    
    <item>
      <title>DVWA之Brute Force更新</title>
      <link>https://xxe.icu/dvwa-brute-force-update.html</link>
      <pubDate>Wed, 28 Feb 2018 00:18:00 +0000</pubDate>
      
      <guid>https://xxe.icu/dvwa-brute-force-update.html</guid>
      <description>前言 今天又练习了一遍DVWA，发现了一些小问题。 问题一 在原文http://www.freebuf.com/articles/web/1164</description>
    </item>
    
  </channel>
</rss>
